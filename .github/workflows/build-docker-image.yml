name: Create and publish a Docker image

on:
  push:
    branches:
      - "main"
      - "test"
      - "gh-pages"

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cuda_version: 12.1.0
            pytorch_version: 2.3.1
          - cuda_version: 12.4.0
            pytorch_version: 2.4
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Adjutment docker volumes
        run: |
          docker system df
          docker system prune -a --volumes -f
          docker system df
          df

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            CUDA_VERSION=${{ matrix.cuda_version }}
            PYTORCH_VERSION=${{ matrix.pytorch_version }}
          tags: |
            ${{ github.repository }}:${{ matrix.cuda_version }}-${{ env.SHORT_SHA }}
            ${{ github.repository }}:${{ matrix.cuda_version }}
          cache-from: type=registry,ref=${{ github.repository }}:cache-${{ matrix.cuda_version }}
          cache-to: type=registry,ref=${{ github.repository }}:cache-${{ matrix.cuda_version }},mode=max

  generate-redoc:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Run Docker container
        run: |
          docker run -d -p 7680:7680 --name sd-forge-container -e ARGS="--listen --enable-insecure-extension-access --port 7680 --nowebui --api --api-server-stop --always-cpu --skip-torch-cuda-test --skip-install" sammrai/sd-forge-docker:12.4.0
          sleep 30 # Adjust if necessary, based on how long it takes the app to initialize

      - name: Download openapi.json
        run: |
          for i in $(seq 1 30); do
            curl -sf -o openapi.json http://localhost:7680/openapi.json && break
            sleep 1
          done
          [ -f openapi.json ] || { echo "openapi.json not found after 30 attempts"; exit 1; }

      - name: Install openapi-generate-html
        run: |
          npm install -g openapi-generate-html
          mkdir pages

      - name: Generate Stoplight Light HTML
        run: |
          npx openapi-generate-html -i openapi.json --ui=stoplight --theme=light --output pages/stoplight.html

      - name: Generate Stoplight Dark HTML
        run: |
          npx openapi-generate-html -i openapi.json --ui=redoc --theme=light --output pages/redoc.html

      - name: Generate Swagger Light HTML
        run: |
          npx openapi-generate-html -i openapi.json --ui=swagger --theme=light --output pages/swagger.html

      - uses: actions/upload-pages-artifact@v4
        with:
          path: pages

      - name: Clean up Docker container
        run: |
          docker stop sd-forge-container
          docker rm sd-forge-container

  documentation-deployment:
    needs: generate-redoc
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v1
        id: deployment
